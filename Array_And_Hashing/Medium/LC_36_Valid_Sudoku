/*
Problem 
input: 2D character array
output: boolean data type (true or false), to determine the validity of 9 by 9 Sudoku board.

  rules:
    Explicit Requirements -
   1. Must validate the filled cells only.
    2. Each row must contain the digits 1-9 without repetition.
    3. Each column must contain the digits 1-9 without repetition.
    4. Each of the nine 3 by 3 sub-boxes of the grid must contain the digits 1-9 without repetition. 

    Important Note - 
    1. A sudoku board (partially filled) could be valid but is not necessarily solvable.
    2. Only the filled cells need to be validated.

    Implicit Requirements - 
    1. Unfilled cells are filled with "."

    Constraints:

      board.length == 9
      board[i].length == 9
      board[i][j] is a digit 1-9 or '.'.



Examples/Test Cases:- 

Example 1:


Input: board = 
[["5","3",".",".","7",".",".",".","."]
,["6",".",".","1","9","5",".",".","."]
,[".","9","8",".",".",".",".","6","."]
,["8",".",".",".","6",".",".",".","3"]
,["4",".",".","8",".","3",".",".","1"]
,["7",".",".",".","2",".",".",".","6"]
,[".","6",".",".",".",".","2","8","."]
,[".",".",".","4","1","9",".",".","5"]
,[".",".",".",".","8",".",".","7","9"]]
Output: true
Example 2:

Input: board = 
[["8","3",".",".","7",".",".",".","."]
,["6",".",".","1","9","5",".",".","."]
,[".","9","8",".",".",".",".","6","."]
,["8",".",".",".","6",".",".",".","3"]
,["4",".",".","8",".","3",".",".","1"]
,["7",".",".",".","2",".",".",".","6"]
,[".","6",".",".",".",".","2","8","."]
,[".",".",".","4","1","9",".",".","5"]
,[".",".",".",".","8",".",".","7","9"]]
Output: false
Explanation: Same as Example 1, except with the 5 in the top left corner being modified to 8. Since there are two 8's in the top left 3x3 sub-box, it is invalid.

Data Structures:- 
Input:- 2D array of characters 
Output:- Boolean data type

Algorithm - 

Thinking
Basically we need to check three things:

Are there duplicates in each row? If yes, return false
Are there duplicates in each column? If yes, return false
Are there duplicates in each 3x3 box? If yes, return false
if everything passes, return true at the end.

When dealing with checking for duplicates, we use a Hash Set.

Representations
Let's deal with rows and columns first because it's easier to tackle:

for (let i = 0; i < 9; i++) {
  let row = new Set(); 
  let col = new Set(); 
  for(let j = 0; j < 9; j++) {
    board[i][j] 
    board[j][i] 
  }
}
So as we go through each row/column we add unseen number to the row/column Set accordingly. If Set has seen it, we return false.


if (item != '.') {
  if (row.has(item)) return false;
  row.add(item);
}
Now let's ace the 3x3 box iterating inside the same loop:
This is a illustration of a sudoku in nine 3x3 boxes with each cell represented by a two-digit number ij (i means row index and j means column index).

00 01 02 | 03 04 05 | 06 07 08
10 11 12 | 13 14 15 | 16 17 18  // i = 0, 1, 2
20 21 22 | 23 24 25 | 26 27 28
------------------------------
30 31 32 | 33 34 35 | 36 37 38
40 41 42 | 43 44 45 | 46 47 48  // i = 3, 4, 5
50 51 52 | 53 54 55 | 56 57 58
------------------------------
60 61 62 | 63 64 65 | 66 67 68 
70 71 72 | 73 74 75 | 76 77 78  // i = 6, 7, 8
80 81 82 | 83 84 85 | 86 87 88
How do we iterate using i, j, and 3(because its 3x3)?
We use / and % to help!

Because we only want to start vertical traversal when horizontal traversal is done. 

Use / for vertical traversal because
Math.floor(0 / 3) = 0
Math.floor(1 / 3) = 0
Math.floor(2 / 3) = 0

Use % for horizontal traversal beause 
0 % 3 = 0
1 % 3 = 1
2 % 3 = 2
We can represent the 3x3 box as:

for (let i = 0; i < 9; i++) {
  for(let j = 0; j < 9; j++) {
    board[3 * Math.floor(i/3) + Math.floor(j/3)][3 * i%3 + j%3]
  }
}



*/

/**
 * @param {character[][]} board
 * @return {boolean}
 */
/*
var isValidSudoku = function (board) {
  for (let i = 0; i < 9; i++) {
    let row = new Set(),
      col = new Set(),
      box = new Set();

    for (let j = 0; j < 9; j++) {
      let _row = board[i][j];
      let _col = board[j][i];
      let _box = board[3 * Math.floor(i / 3) + Math.floor(j / 3)][3 * (i % 3) + (j % 3)];

      if (_row != '.') {
        if (row.has(_row)) return false;
        row.add(_row);
      }
      if (_col != '.') {
        if (col.has(_col)) return false;
        col.add(_col);
      }

      if (_box != '.') {
        if (box.has(_box)) return false;
        box.add(_box);
      }
    }
  }
  return true

};
*/

var isValidSudoku = function (board) {
  const cols = new Map();
  const rows = new Map();
  const squares = new Map(); // key = `${r / 3}-${c / 3}`

  for (let r = 0; r < 9; r++) {
    for (let c = 0; c < 9; c++) {
      if (board[r][c] === ".") {
        continue;
      }

      if (
        rows.has(r) && rows.get(r).has(board[r][c]) ||
        cols.has(c) && cols.get(c).has(board[r][c]) ||
        squares.has(`${Math.floor(r / 3)}-${Math.floor(c / 3)}`) &&
        squares.get(`${Math.floor(r / 3)}-${Math.floor(c / 3)}`).has(board[r][c])
      ) {
        return false;
      }

      if (!cols.has(c)) {
        cols.set(c, new Set());
      }

      console.log("The cols hashmap is ");
      console.log(cols);

      cols.get(c).add(board[r][c]);

      console.log("The cols hashmap after adding column index, c is ");
      console.log(cols);

      if (!rows.has(r)) {
        rows.set(r, new Set());
      }

      console.log("The rows hashmap is ");
      console.log(rows);

      rows.get(r).add(board[r][c]);

      console.log("The rows hashmap after adding row index, r is ");
      console.log(rows);

      const squareKey = `${Math.floor(r / 3)}-${Math.floor(c / 3)}`;
      if (!squares.has(squareKey)) {
        squares.set(squareKey, new Set());
      }

      console.log("The squares hashmap is ");
      console.log(squares);

      squares.get(squareKey).add(board[r][c]);

      console.log("The squares hashmap after adding the squares index, squareKey is ");
      console.log(squares);

    }
  }

  return true;
};













let board = [["5", "3", ".", ".", "7", ".", ".", ".", "."]
  , ["6", ".", ".", "1", "9", "5", ".", ".", "."]
  , [".", "9", "8", ".", ".", ".", ".", "6", "."]
  , ["8", ".", ".", ".", "6", ".", ".", ".", "3"]
  , ["4", ".", ".", "8", ".", "3", ".", ".", "1"]
  , ["7", ".", ".", ".", "2", ".", ".", ".", "6"]
  , [".", "6", ".", ".", ".", ".", "2", "8", "."]
  , [".", ".", ".", "4", "1", "9", ".", ".", "5"]
  , [".", ".", ".", ".", "8", ".", ".", "7", "9"]];

console.log(isValidSudoku(board)); // true

board = [["8", "3", ".", ".", "7", ".", ".", ".", "."]
  , ["6", ".", ".", "1", "9", "5", ".", ".", "."]
  , [".", "9", "8", ".", ".", ".", ".", "6", "."]
  , ["8", ".", ".", ".", "6", ".", ".", ".", "3"]
  , ["4", ".", ".", "8", ".", "3", ".", ".", "1"]
  , ["7", ".", ".", ".", "2", ".", ".", ".", "6"]
  , [".", "6", ".", ".", ".", ".", "2", "8", "."]
  , [".", ".", ".", "4", "1", "9", ".", ".", "5"]
  , [".", ".", ".", ".", "8", ".", ".", "7", "9"]];

console.log(isValidSudoku(board)); // false

/*

class Solution {
    isValidSudoku(board) {
        const cols = new Map();
        const rows = new Map();
        const squares = new Map(); // key = `${r / 3}-${c / 3}`

        for (let r = 0; r < 9; r++) {
            for (let c = 0; c < 9; c++) {
                if (board[r][c] === ".") {
                    continue;
                }

                if (
                    rows.has(r) && rows.get(r).has(board[r][c]) ||
                    cols.has(c) && cols.get(c).has(board[r][c]) ||
                    squares.has(`${Math.floor(r / 3)}-${Math.floor(c / 3)}`) &&
                    squares.get(`${Math.floor(r / 3)}-${Math.floor(c / 3)}`).has(board[r][c])
                ) {
                    return false;
                }

                if (!cols.has(c)) {
                    cols.set(c, new Set());
                }
                cols.get(c).add(board[r][c]);

                if (!rows.has(r)) {
                    rows.set(r, new Set());
                }
                rows.get(r).add(board[r][c]);

                const squareKey = `${Math.floor(r / 3)}-${Math.floor(c / 3)}`;
                if (!squares.has(squareKey)) {
                    squares.set(squareKey, new Set());
                }
                squares.get(squareKey).add(board[r][c]);
            }
        }

        return true;
    }
}


*/

/*
Detailed Understandng 

The cols hashmap is 
Map(1) { 0 => Set(0) {} }
The cols hashmap after adding column index, c is 
Map(1) { 0 => Set(1) { '5' } }
The rows hashmap is 
Map(1) { 0 => Set(0) {} }
The rows hashmap after adding row index, r is 
Map(1) { 0 => Set(1) { '5' } }
The squares hashmap is 
Map(1) { '0-0' => Set(0) {} }
The squares hashmap after adding the squares index, squareKey is 
Map(1) { '0-0' => Set(1) { '5' } }
The cols hashmap is 
Map(2) { 0 => Set(1) { '5' }, 1 => Set(0) {} }
The cols hashmap after adding column index, c is 
Map(2) { 0 => Set(1) { '5' }, 1 => Set(1) { '3' } }
The rows hashmap is 
Map(1) { 0 => Set(1) { '5' } }
The rows hashmap after adding row index, r is 
Map(1) { 0 => Set(2) { '5', '3' } }
The squares hashmap is 
Map(1) { '0-0' => Set(1) { '5' } }
The squares hashmap after adding the squares index, squareKey is 
Map(1) { '0-0' => Set(2) { '5', '3' } }
The cols hashmap is 
Map(3) { 0 => Set(1) { '5' }, 1 => Set(1) { '3' }, 4 => Set(0) {} }
The cols hashmap after adding column index, c is 
Map(3) {
  0 => Set(1) { '5' },
  1 => Set(1) { '3' },
  4 => Set(1) { '7' }
}
The rows hashmap is 
Map(1) { 0 => Set(2) { '5', '3' } }
The rows hashmap after adding row index, r is 
Map(1) { 0 => Set(3) { '5', '3', '7' } }
The squares hashmap is 
Map(2) { '0-0' => Set(2) { '5', '3' }, '0-1' => Set(0) {} }
The squares hashmap after adding the squares index, squareKey is 
Map(2) { '0-0' => Set(2) { '5', '3' }, '0-1' => Set(1) { '7' } }
The cols hashmap is 
Map(3) {
  0 => Set(1) { '5' },
  1 => Set(1) { '3' },
  4 => Set(1) { '7' }
}
The cols hashmap after adding column index, c is 
Map(3) {
  0 => Set(2) { '5', '6' },
  1 => Set(1) { '3' },
  4 => Set(1) { '7' }
}
The rows hashmap is 
Map(2) { 0 => Set(3) { '5', '3', '7' }, 1 => Set(0) {} }
The rows hashmap after adding row index, r is 
Map(2) { 0 => Set(3) { '5', '3', '7' }, 1 => Set(1) { '6' } }
The squares hashmap is 
Map(2) { '0-0' => Set(2) { '5', '3' }, '0-1' => Set(1) { '7' } }
The squares hashmap after adding the squares index, squareKey is 
Map(2) { '0-0' => Set(3) { '5', '3', '6' }, '0-1' => Set(1) { '7' } }
The cols hashmap is 
Map(4) {
  0 => Set(2) { '5', '6' },
  1 => Set(1) { '3' },
  4 => Set(1) { '7' },
  3 => Set(0) {}
}
The cols hashmap after adding column index, c is 
Map(4) {
  0 => Set(2) { '5', '6' },
  1 => Set(1) { '3' },
  4 => Set(1) { '7' },
  3 => Set(1) { '1' }
}
The rows hashmap is 
Map(2) { 0 => Set(3) { '5', '3', '7' }, 1 => Set(1) { '6' } }
The rows hashmap after adding row index, r is 
Map(2) { 0 => Set(3) { '5', '3', '7' }, 1 => Set(2) { '6', '1' } }
The squares hashmap is 
Map(2) { '0-0' => Set(3) { '5', '3', '6' }, '0-1' => Set(1) { '7' } }
The squares hashmap after adding the squares index, squareKey is 
Map(2) {
  '0-0' => Set(3) { '5', '3', '6' },
  '0-1' => Set(2) { '7', '1' }
}
The cols hashmap is 
Map(4) {
  0 => Set(2) { '5', '6' },
  1 => Set(1) { '3' },
  4 => Set(1) { '7' },
  3 => Set(1) { '1' }
}
The cols hashmap after adding column index, c is 
Map(4) {
  0 => Set(2) { '5', '6' },
  1 => Set(1) { '3' },
  4 => Set(2) { '7', '9' },
  3 => Set(1) { '1' }
}
The rows hashmap is 
Map(2) { 0 => Set(3) { '5', '3', '7' }, 1 => Set(2) { '6', '1' } }
The rows hashmap after adding row index, r is 
Map(2) { 0 => Set(3) { '5', '3', '7' }, 1 => Set(3) { '6', '1', '9' } }
The squares hashmap is 
Map(2) {
  '0-0' => Set(3) { '5', '3', '6' },
  '0-1' => Set(2) { '7', '1' }
}
The squares hashmap after adding the squares index, squareKey is 
Map(2) {
  '0-0' => Set(3) { '5', '3', '6' },
  '0-1' => Set(3) { '7', '1', '9' }
}
The cols hashmap is 
Map(5) {
  0 => Set(2) { '5', '6' },
  1 => Set(1) { '3' },
  4 => Set(2) { '7', '9' },
  3 => Set(1) { '1' },
  5 => Set(0) {}
}
The cols hashmap after adding column index, c is 
Map(5) {
  0 => Set(2) { '5', '6' },
  1 => Set(1) { '3' },
  4 => Set(2) { '7', '9' },
  3 => Set(1) { '1' },
  5 => Set(1) { '5' }
}
The rows hashmap is 
Map(2) { 0 => Set(3) { '5', '3', '7' }, 1 => Set(3) { '6', '1', '9' } }
The rows hashmap after adding row index, r is 
Map(2) {
  0 => Set(3) { '5', '3', '7' },
  1 => Set(4) { '6', '1', '9', '5' }
}
The squares hashmap is 
Map(2) {
  '0-0' => Set(3) { '5', '3', '6' },
  '0-1' => Set(3) { '7', '1', '9' }
}
The squares hashmap after adding the squares index, squareKey is 
Map(2) {
  '0-0' => Set(3) { '5', '3', '6' },
  '0-1' => Set(4) { '7', '1', '9', '5' }
}
The cols hashmap is 
Map(5) {
  0 => Set(2) { '5', '6' },
  1 => Set(1) { '3' },
  4 => Set(2) { '7', '9' },
  3 => Set(1) { '1' },
  5 => Set(1) { '5' }
}
The cols hashmap after adding column index, c is 
Map(5) {
  0 => Set(2) { '5', '6' },
  1 => Set(2) { '3', '9' },
  4 => Set(2) { '7', '9' },
  3 => Set(1) { '1' },
  5 => Set(1) { '5' }
}
The rows hashmap is 
Map(3) {
  0 => Set(3) { '5', '3', '7' },
  1 => Set(4) { '6', '1', '9', '5' },
  2 => Set(0) {}
}
The rows hashmap after adding row index, r is 
Map(3) {
  0 => Set(3) { '5', '3', '7' },
  1 => Set(4) { '6', '1', '9', '5' },
  2 => Set(1) { '9' }
}
The squares hashmap is 
Map(2) {
  '0-0' => Set(3) { '5', '3', '6' },
  '0-1' => Set(4) { '7', '1', '9', '5' }
}
The squares hashmap after adding the squares index, squareKey is 
Map(2) {
  '0-0' => Set(4) { '5', '3', '6', '9' },
  '0-1' => Set(4) { '7', '1', '9', '5' }
}
The cols hashmap is 
Map(6) {
  0 => Set(2) { '5', '6' },
  1 => Set(2) { '3', '9' },
  4 => Set(2) { '7', '9' },
  3 => Set(1) { '1' },
  5 => Set(1) { '5' },
  2 => Set(0) {}
}
The cols hashmap after adding column index, c is 
Map(6) {
  0 => Set(2) { '5', '6' },
  1 => Set(2) { '3', '9' },
  4 => Set(2) { '7', '9' },
  3 => Set(1) { '1' },
  5 => Set(1) { '5' },
  2 => Set(1) { '8' }
}
The rows hashmap is 
Map(3) {
  0 => Set(3) { '5', '3', '7' },
  1 => Set(4) { '6', '1', '9', '5' },
  2 => Set(1) { '9' }
}
The rows hashmap after adding row index, r is 
Map(3) {
  0 => Set(3) { '5', '3', '7' },
  1 => Set(4) { '6', '1', '9', '5' },
  2 => Set(2) { '9', '8' }
}
The squares hashmap is 
Map(2) {
  '0-0' => Set(4) { '5', '3', '6', '9' },
  '0-1' => Set(4) { '7', '1', '9', '5' }
}
The squares hashmap after adding the squares index, squareKey is 
Map(2) {
  '0-0' => Set(5) { '5', '3', '6', '9', '8' },
  '0-1' => Set(4) { '7', '1', '9', '5' }
}
The cols hashmap is 
Map(7) {
  0 => Set(2) { '5', '6' },
  1 => Set(2) { '3', '9' },
  4 => Set(2) { '7', '9' },
  3 => Set(1) { '1' },
  5 => Set(1) { '5' },
  2 => Set(1) { '8' },
  7 => Set(0) {}
}
The cols hashmap after adding column index, c is 
Map(7) {
  0 => Set(2) { '5', '6' },
  1 => Set(2) { '3', '9' },
  4 => Set(2) { '7', '9' },
  3 => Set(1) { '1' },
  5 => Set(1) { '5' },
  2 => Set(1) { '8' },
  7 => Set(1) { '6' }
}
The rows hashmap is 
Map(3) {
  0 => Set(3) { '5', '3', '7' },
  1 => Set(4) { '6', '1', '9', '5' },
  2 => Set(2) { '9', '8' }
}
The rows hashmap after adding row index, r is 
Map(3) {
  0 => Set(3) { '5', '3', '7' },
  1 => Set(4) { '6', '1', '9', '5' },
  2 => Set(3) { '9', '8', '6' }
}
The squares hashmap is 
Map(3) {
  '0-0' => Set(5) { '5', '3', '6', '9', '8' },
  '0-1' => Set(4) { '7', '1', '9', '5' },
  '0-2' => Set(0) {}
}
The squares hashmap after adding the squares index, squareKey is 
Map(3) {
  '0-0' => Set(5) { '5', '3', '6', '9', '8' },
  '0-1' => Set(4) { '7', '1', '9', '5' },
  '0-2' => Set(1) { '6' }
}
The cols hashmap is 
Map(7) {
  0 => Set(2) { '5', '6' },
  1 => Set(2) { '3', '9' },
  4 => Set(2) { '7', '9' },
  3 => Set(1) { '1' },
  5 => Set(1) { '5' },
  2 => Set(1) { '8' },
  7 => Set(1) { '6' }
}
The cols hashmap after adding column index, c is 
Map(7) {
  0 => Set(3) { '5', '6', '8' },
  1 => Set(2) { '3', '9' },
  4 => Set(2) { '7', '9' },
  3 => Set(1) { '1' },
  5 => Set(1) { '5' },
  2 => Set(1) { '8' },
  7 => Set(1) { '6' }
}
The rows hashmap is 
Map(4) {
  0 => Set(3) { '5', '3', '7' },
  1 => Set(4) { '6', '1', '9', '5' },
  2 => Set(3) { '9', '8', '6' },
  3 => Set(0) {}
}
The rows hashmap after adding row index, r is 
Map(4) {
  0 => Set(3) { '5', '3', '7' },
  1 => Set(4) { '6', '1', '9', '5' },
  2 => Set(3) { '9', '8', '6' },
  3 => Set(1) { '8' }
}
The squares hashmap is 
Map(4) {
  '0-0' => Set(5) { '5', '3', '6', '9', '8' },
  '0-1' => Set(4) { '7', '1', '9', '5' },
  '0-2' => Set(1) { '6' },
  '1-0' => Set(0) {}
}
The squares hashmap after adding the squares index, squareKey is 
Map(4) {
  '0-0' => Set(5) { '5', '3', '6', '9', '8' },
  '0-1' => Set(4) { '7', '1', '9', '5' },
  '0-2' => Set(1) { '6' },
  '1-0' => Set(1) { '8' }
}
The cols hashmap is 
Map(7) {
  0 => Set(3) { '5', '6', '8' },
  1 => Set(2) { '3', '9' },
  4 => Set(2) { '7', '9' },
  3 => Set(1) { '1' },
  5 => Set(1) { '5' },
  2 => Set(1) { '8' },
  7 => Set(1) { '6' }
}
The cols hashmap after adding column index, c is 
Map(7) {
  0 => Set(3) { '5', '6', '8' },
  1 => Set(2) { '3', '9' },
  4 => Set(3) { '7', '9', '6' },
  3 => Set(1) { '1' },
  5 => Set(1) { '5' },
  2 => Set(1) { '8' },
  7 => Set(1) { '6' }
}
The rows hashmap is 
Map(4) {
  0 => Set(3) { '5', '3', '7' },
  1 => Set(4) { '6', '1', '9', '5' },
  2 => Set(3) { '9', '8', '6' },
  3 => Set(1) { '8' }
}
The rows hashmap after adding row index, r is 
Map(4) {
  0 => Set(3) { '5', '3', '7' },
  1 => Set(4) { '6', '1', '9', '5' },
  2 => Set(3) { '9', '8', '6' },
  3 => Set(2) { '8', '6' }
}
The squares hashmap is 
Map(5) {
  '0-0' => Set(5) { '5', '3', '6', '9', '8' },
  '0-1' => Set(4) { '7', '1', '9', '5' },
  '0-2' => Set(1) { '6' },
  '1-0' => Set(1) { '8' },
  '1-1' => Set(0) {}
}
The squares hashmap after adding the squares index, squareKey is 
Map(5) {
  '0-0' => Set(5) { '5', '3', '6', '9', '8' },
  '0-1' => Set(4) { '7', '1', '9', '5' },
  '0-2' => Set(1) { '6' },
  '1-0' => Set(1) { '8' },
  '1-1' => Set(1) { '6' }
}
The cols hashmap is 
Map(8) {
  0 => Set(3) { '5', '6', '8' },
  1 => Set(2) { '3', '9' },
  4 => Set(3) { '7', '9', '6' },
  3 => Set(1) { '1' },
  5 => Set(1) { '5' },
  2 => Set(1) { '8' },
  7 => Set(1) { '6' },
  8 => Set(0) {}
}
The cols hashmap after adding column index, c is 
Map(8) {
  0 => Set(3) { '5', '6', '8' },
  1 => Set(2) { '3', '9' },
  4 => Set(3) { '7', '9', '6' },
  3 => Set(1) { '1' },
  5 => Set(1) { '5' },
  2 => Set(1) { '8' },
  7 => Set(1) { '6' },
  8 => Set(1) { '3' }
}
The rows hashmap is 
Map(4) {
  0 => Set(3) { '5', '3', '7' },
  1 => Set(4) { '6', '1', '9', '5' },
  2 => Set(3) { '9', '8', '6' },
  3 => Set(2) { '8', '6' }
}
The rows hashmap after adding row index, r is 
Map(4) {
  0 => Set(3) { '5', '3', '7' },
  1 => Set(4) { '6', '1', '9', '5' },
  2 => Set(3) { '9', '8', '6' },
  3 => Set(3) { '8', '6', '3' }
}
The squares hashmap is 
Map(6) {
  '0-0' => Set(5) { '5', '3', '6', '9', '8' },
  '0-1' => Set(4) { '7', '1', '9', '5' },
  '0-2' => Set(1) { '6' },
  '1-0' => Set(1) { '8' },
  '1-1' => Set(1) { '6' },
  '1-2' => Set(0) {}
}
The squares hashmap after adding the squares index, squareKey is 
Map(6) {
  '0-0' => Set(5) { '5', '3', '6', '9', '8' },
  '0-1' => Set(4) { '7', '1', '9', '5' },
  '0-2' => Set(1) { '6' },
  '1-0' => Set(1) { '8' },
  '1-1' => Set(1) { '6' },
  '1-2' => Set(1) { '3' }
}
The cols hashmap is 
Map(8) {
  0 => Set(3) { '5', '6', '8' },
  1 => Set(2) { '3', '9' },
  4 => Set(3) { '7', '9', '6' },
  3 => Set(1) { '1' },
  5 => Set(1) { '5' },
  2 => Set(1) { '8' },
  7 => Set(1) { '6' },
  8 => Set(1) { '3' }
}
The cols hashmap after adding column index, c is 
Map(8) {
  0 => Set(4) { '5', '6', '8', '4' },
  1 => Set(2) { '3', '9' },
  4 => Set(3) { '7', '9', '6' },
  3 => Set(1) { '1' },
  5 => Set(1) { '5' },
  2 => Set(1) { '8' },
  7 => Set(1) { '6' },
  8 => Set(1) { '3' }
}
The rows hashmap is 
Map(5) {
  0 => Set(3) { '5', '3', '7' },
  1 => Set(4) { '6', '1', '9', '5' },
  2 => Set(3) { '9', '8', '6' },
  3 => Set(3) { '8', '6', '3' },
  4 => Set(0) {}
}
The rows hashmap after adding row index, r is 
Map(5) {
  0 => Set(3) { '5', '3', '7' },
  1 => Set(4) { '6', '1', '9', '5' },
  2 => Set(3) { '9', '8', '6' },
  3 => Set(3) { '8', '6', '3' },
  4 => Set(1) { '4' }
}
The squares hashmap is 
Map(6) {
  '0-0' => Set(5) { '5', '3', '6', '9', '8' },
  '0-1' => Set(4) { '7', '1', '9', '5' },
  '0-2' => Set(1) { '6' },
  '1-0' => Set(1) { '8' },
  '1-1' => Set(1) { '6' },
  '1-2' => Set(1) { '3' }
}
The squares hashmap after adding the squares index, squareKey is 
Map(6) {
  '0-0' => Set(5) { '5', '3', '6', '9', '8' },
  '0-1' => Set(4) { '7', '1', '9', '5' },
  '0-2' => Set(1) { '6' },
  '1-0' => Set(2) { '8', '4' },
  '1-1' => Set(1) { '6' },
  '1-2' => Set(1) { '3' }
}
The cols hashmap is 
Map(8) {
  0 => Set(4) { '5', '6', '8', '4' },
  1 => Set(2) { '3', '9' },
  4 => Set(3) { '7', '9', '6' },
  3 => Set(1) { '1' },
  5 => Set(1) { '5' },
  2 => Set(1) { '8' },
  7 => Set(1) { '6' },
  8 => Set(1) { '3' }
}
The cols hashmap after adding column index, c is 
Map(8) {
  0 => Set(4) { '5', '6', '8', '4' },
  1 => Set(2) { '3', '9' },
  4 => Set(3) { '7', '9', '6' },
  3 => Set(2) { '1', '8' },
  5 => Set(1) { '5' },
  2 => Set(1) { '8' },
  7 => Set(1) { '6' },
  8 => Set(1) { '3' }
}
The rows hashmap is 
Map(5) {
  0 => Set(3) { '5', '3', '7' },
  1 => Set(4) { '6', '1', '9', '5' },
  2 => Set(3) { '9', '8', '6' },
  3 => Set(3) { '8', '6', '3' },
  4 => Set(1) { '4' }
}
The rows hashmap after adding row index, r is 
Map(5) {
  0 => Set(3) { '5', '3', '7' },
  1 => Set(4) { '6', '1', '9', '5' },
  2 => Set(3) { '9', '8', '6' },
  3 => Set(3) { '8', '6', '3' },
  4 => Set(2) { '4', '8' }
}
The squares hashmap is 
Map(6) {
  '0-0' => Set(5) { '5', '3', '6', '9', '8' },
  '0-1' => Set(4) { '7', '1', '9', '5' },
  '0-2' => Set(1) { '6' },
  '1-0' => Set(2) { '8', '4' },
  '1-1' => Set(1) { '6' },
  '1-2' => Set(1) { '3' }
}
The squares hashmap after adding the squares index, squareKey is 
Map(6) {
  '0-0' => Set(5) { '5', '3', '6', '9', '8' },
  '0-1' => Set(4) { '7', '1', '9', '5' },
  '0-2' => Set(1) { '6' },
  '1-0' => Set(2) { '8', '4' },
  '1-1' => Set(2) { '6', '8' },
  '1-2' => Set(1) { '3' }
}
The cols hashmap is 
Map(8) {
  0 => Set(4) { '5', '6', '8', '4' },
  1 => Set(2) { '3', '9' },
  4 => Set(3) { '7', '9', '6' },
  3 => Set(2) { '1', '8' },
  5 => Set(1) { '5' },
  2 => Set(1) { '8' },
  7 => Set(1) { '6' },
  8 => Set(1) { '3' }
}
The cols hashmap after adding column index, c is 
Map(8) {
  0 => Set(4) { '5', '6', '8', '4' },
  1 => Set(2) { '3', '9' },
  4 => Set(3) { '7', '9', '6' },
  3 => Set(2) { '1', '8' },
  5 => Set(2) { '5', '3' },
  2 => Set(1) { '8' },
  7 => Set(1) { '6' },
  8 => Set(1) { '3' }
}
The rows hashmap is 
Map(5) {
  0 => Set(3) { '5', '3', '7' },
  1 => Set(4) { '6', '1', '9', '5' },
  2 => Set(3) { '9', '8', '6' },
  3 => Set(3) { '8', '6', '3' },
  4 => Set(2) { '4', '8' }
}
The rows hashmap after adding row index, r is 
Map(5) {
  0 => Set(3) { '5', '3', '7' },
  1 => Set(4) { '6', '1', '9', '5' },
  2 => Set(3) { '9', '8', '6' },
  3 => Set(3) { '8', '6', '3' },
  4 => Set(3) { '4', '8', '3' }
}
The squares hashmap is 
Map(6) {
  '0-0' => Set(5) { '5', '3', '6', '9', '8' },
  '0-1' => Set(4) { '7', '1', '9', '5' },
  '0-2' => Set(1) { '6' },
  '1-0' => Set(2) { '8', '4' },
  '1-1' => Set(2) { '6', '8' },
  '1-2' => Set(1) { '3' }
}
The squares hashmap after adding the squares index, squareKey is 
Map(6) {
  '0-0' => Set(5) { '5', '3', '6', '9', '8' },
  '0-1' => Set(4) { '7', '1', '9', '5' },
  '0-2' => Set(1) { '6' },
  '1-0' => Set(2) { '8', '4' },
  '1-1' => Set(3) { '6', '8', '3' },
  '1-2' => Set(1) { '3' }
}
The cols hashmap is 
Map(8) {
  0 => Set(4) { '5', '6', '8', '4' },
  1 => Set(2) { '3', '9' },
  4 => Set(3) { '7', '9', '6' },
  3 => Set(2) { '1', '8' },
  5 => Set(2) { '5', '3' },
  2 => Set(1) { '8' },
  7 => Set(1) { '6' },
  8 => Set(1) { '3' }
}
The cols hashmap after adding column index, c is 
Map(8) {
  0 => Set(4) { '5', '6', '8', '4' },
  1 => Set(2) { '3', '9' },
  4 => Set(3) { '7', '9', '6' },
  3 => Set(2) { '1', '8' },
  5 => Set(2) { '5', '3' },
  2 => Set(1) { '8' },
  7 => Set(1) { '6' },
  8 => Set(2) { '3', '1' }
}
The rows hashmap is 
Map(5) {
  0 => Set(3) { '5', '3', '7' },
  1 => Set(4) { '6', '1', '9', '5' },
  2 => Set(3) { '9', '8', '6' },
  3 => Set(3) { '8', '6', '3' },
  4 => Set(3) { '4', '8', '3' }
}
The rows hashmap after adding row index, r is 
Map(5) {
  0 => Set(3) { '5', '3', '7' },
  1 => Set(4) { '6', '1', '9', '5' },
  2 => Set(3) { '9', '8', '6' },
  3 => Set(3) { '8', '6', '3' },
  4 => Set(4) { '4', '8', '3', '1' }
}
The squares hashmap is 
Map(6) {
  '0-0' => Set(5) { '5', '3', '6', '9', '8' },
  '0-1' => Set(4) { '7', '1', '9', '5' },
  '0-2' => Set(1) { '6' },
  '1-0' => Set(2) { '8', '4' },
  '1-1' => Set(3) { '6', '8', '3' },
  '1-2' => Set(1) { '3' }
}
The squares hashmap after adding the squares index, squareKey is 
Map(6) {
  '0-0' => Set(5) { '5', '3', '6', '9', '8' },
  '0-1' => Set(4) { '7', '1', '9', '5' },
  '0-2' => Set(1) { '6' },
  '1-0' => Set(2) { '8', '4' },
  '1-1' => Set(3) { '6', '8', '3' },
  '1-2' => Set(2) { '3', '1' }
}
The cols hashmap is 
Map(8) {
  0 => Set(4) { '5', '6', '8', '4' },
  1 => Set(2) { '3', '9' },
  4 => Set(3) { '7', '9', '6' },
  3 => Set(2) { '1', '8' },
  5 => Set(2) { '5', '3' },
  2 => Set(1) { '8' },
  7 => Set(1) { '6' },
  8 => Set(2) { '3', '1' }
}
The cols hashmap after adding column index, c is 
Map(8) {
  0 => Set(5) { '5', '6', '8', '4', '7' },
  1 => Set(2) { '3', '9' },
  4 => Set(3) { '7', '9', '6' },
  3 => Set(2) { '1', '8' },
  5 => Set(2) { '5', '3' },
  2 => Set(1) { '8' },
  7 => Set(1) { '6' },
  8 => Set(2) { '3', '1' }
}
The rows hashmap is 
Map(6) {
  0 => Set(3) { '5', '3', '7' },
  1 => Set(4) { '6', '1', '9', '5' },
  2 => Set(3) { '9', '8', '6' },
  3 => Set(3) { '8', '6', '3' },
  4 => Set(4) { '4', '8', '3', '1' },
  5 => Set(0) {}
}
The rows hashmap after adding row index, r is 
Map(6) {
  0 => Set(3) { '5', '3', '7' },
  1 => Set(4) { '6', '1', '9', '5' },
  2 => Set(3) { '9', '8', '6' },
  3 => Set(3) { '8', '6', '3' },
  4 => Set(4) { '4', '8', '3', '1' },
  5 => Set(1) { '7' }
}
The squares hashmap is 
Map(6) {
  '0-0' => Set(5) { '5', '3', '6', '9', '8' },
  '0-1' => Set(4) { '7', '1', '9', '5' },
  '0-2' => Set(1) { '6' },
  '1-0' => Set(2) { '8', '4' },
  '1-1' => Set(3) { '6', '8', '3' },
  '1-2' => Set(2) { '3', '1' }
}
The squares hashmap after adding the squares index, squareKey is 
Map(6) {
  '0-0' => Set(5) { '5', '3', '6', '9', '8' },
  '0-1' => Set(4) { '7', '1', '9', '5' },
  '0-2' => Set(1) { '6' },
  '1-0' => Set(3) { '8', '4', '7' },
  '1-1' => Set(3) { '6', '8', '3' },
  '1-2' => Set(2) { '3', '1' }
}
The cols hashmap is 
Map(8) {
  0 => Set(5) { '5', '6', '8', '4', '7' },
  1 => Set(2) { '3', '9' },
  4 => Set(3) { '7', '9', '6' },
  3 => Set(2) { '1', '8' },
  5 => Set(2) { '5', '3' },
  2 => Set(1) { '8' },
  7 => Set(1) { '6' },
  8 => Set(2) { '3', '1' }
}
The cols hashmap after adding column index, c is 
Map(8) {
  0 => Set(5) { '5', '6', '8', '4', '7' },
  1 => Set(2) { '3', '9' },
  4 => Set(4) { '7', '9', '6', '2' },
  3 => Set(2) { '1', '8' },
  5 => Set(2) { '5', '3' },
  2 => Set(1) { '8' },
  7 => Set(1) { '6' },
  8 => Set(2) { '3', '1' }
}
The rows hashmap is 
Map(6) {
  0 => Set(3) { '5', '3', '7' },
  1 => Set(4) { '6', '1', '9', '5' },
  2 => Set(3) { '9', '8', '6' },
  3 => Set(3) { '8', '6', '3' },
  4 => Set(4) { '4', '8', '3', '1' },
  5 => Set(1) { '7' }
}
The rows hashmap after adding row index, r is 
Map(6) {
  0 => Set(3) { '5', '3', '7' },
  1 => Set(4) { '6', '1', '9', '5' },
  2 => Set(3) { '9', '8', '6' },
  3 => Set(3) { '8', '6', '3' },
  4 => Set(4) { '4', '8', '3', '1' },
  5 => Set(2) { '7', '2' }
}
The squares hashmap is 
Map(6) {
  '0-0' => Set(5) { '5', '3', '6', '9', '8' },
  '0-1' => Set(4) { '7', '1', '9', '5' },
  '0-2' => Set(1) { '6' },
  '1-0' => Set(3) { '8', '4', '7' },
  '1-1' => Set(3) { '6', '8', '3' },
  '1-2' => Set(2) { '3', '1' }
}
The squares hashmap after adding the squares index, squareKey is 
Map(6) {
  '0-0' => Set(5) { '5', '3', '6', '9', '8' },
  '0-1' => Set(4) { '7', '1', '9', '5' },
  '0-2' => Set(1) { '6' },
  '1-0' => Set(3) { '8', '4', '7' },
  '1-1' => Set(4) { '6', '8', '3', '2' },
  '1-2' => Set(2) { '3', '1' }
}
The cols hashmap is 
Map(8) {
  0 => Set(5) { '5', '6', '8', '4', '7' },
  1 => Set(2) { '3', '9' },
  4 => Set(4) { '7', '9', '6', '2' },
  3 => Set(2) { '1', '8' },
  5 => Set(2) { '5', '3' },
  2 => Set(1) { '8' },
  7 => Set(1) { '6' },
  8 => Set(2) { '3', '1' }
}
The cols hashmap after adding column index, c is 
Map(8) {
  0 => Set(5) { '5', '6', '8', '4', '7' },
  1 => Set(2) { '3', '9' },
  4 => Set(4) { '7', '9', '6', '2' },
  3 => Set(2) { '1', '8' },
  5 => Set(2) { '5', '3' },
  2 => Set(1) { '8' },
  7 => Set(1) { '6' },
  8 => Set(3) { '3', '1', '6' }
}
The rows hashmap is 
Map(6) {
  0 => Set(3) { '5', '3', '7' },
  1 => Set(4) { '6', '1', '9', '5' },
  2 => Set(3) { '9', '8', '6' },
  3 => Set(3) { '8', '6', '3' },
  4 => Set(4) { '4', '8', '3', '1' },
  5 => Set(2) { '7', '2' }
}
The rows hashmap after adding row index, r is 
Map(6) {
  0 => Set(3) { '5', '3', '7' },
  1 => Set(4) { '6', '1', '9', '5' },
  2 => Set(3) { '9', '8', '6' },
  3 => Set(3) { '8', '6', '3' },
  4 => Set(4) { '4', '8', '3', '1' },
  5 => Set(3) { '7', '2', '6' }
}
The squares hashmap is 
Map(6) {
  '0-0' => Set(5) { '5', '3', '6', '9', '8' },
  '0-1' => Set(4) { '7', '1', '9', '5' },
  '0-2' => Set(1) { '6' },
  '1-0' => Set(3) { '8', '4', '7' },
  '1-1' => Set(4) { '6', '8', '3', '2' },
  '1-2' => Set(2) { '3', '1' }
}
The squares hashmap after adding the squares index, squareKey is 
Map(6) {
  '0-0' => Set(5) { '5', '3', '6', '9', '8' },
  '0-1' => Set(4) { '7', '1', '9', '5' },
  '0-2' => Set(1) { '6' },
  '1-0' => Set(3) { '8', '4', '7' },
  '1-1' => Set(4) { '6', '8', '3', '2' },
  '1-2' => Set(3) { '3', '1', '6' }
}
The cols hashmap is 
Map(8) {
  0 => Set(5) { '5', '6', '8', '4', '7' },
  1 => Set(2) { '3', '9' },
  4 => Set(4) { '7', '9', '6', '2' },
  3 => Set(2) { '1', '8' },
  5 => Set(2) { '5', '3' },
  2 => Set(1) { '8' },
  7 => Set(1) { '6' },
  8 => Set(3) { '3', '1', '6' }
}
The cols hashmap after adding column index, c is 
Map(8) {
  0 => Set(5) { '5', '6', '8', '4', '7' },
  1 => Set(3) { '3', '9', '6' },
  4 => Set(4) { '7', '9', '6', '2' },
  3 => Set(2) { '1', '8' },
  5 => Set(2) { '5', '3' },
  2 => Set(1) { '8' },
  7 => Set(1) { '6' },
  8 => Set(3) { '3', '1', '6' }
}
The rows hashmap is 
Map(7) {
  0 => Set(3) { '5', '3', '7' },
  1 => Set(4) { '6', '1', '9', '5' },
  2 => Set(3) { '9', '8', '6' },
  3 => Set(3) { '8', '6', '3' },
  4 => Set(4) { '4', '8', '3', '1' },
  5 => Set(3) { '7', '2', '6' },
  6 => Set(0) {}
}
The rows hashmap after adding row index, r is 
Map(7) {
  0 => Set(3) { '5', '3', '7' },
  1 => Set(4) { '6', '1', '9', '5' },
  2 => Set(3) { '9', '8', '6' },
  3 => Set(3) { '8', '6', '3' },
  4 => Set(4) { '4', '8', '3', '1' },
  5 => Set(3) { '7', '2', '6' },
  6 => Set(1) { '6' }
}
The squares hashmap is 
Map(7) {
  '0-0' => Set(5) { '5', '3', '6', '9', '8' },
  '0-1' => Set(4) { '7', '1', '9', '5' },
  '0-2' => Set(1) { '6' },
  '1-0' => Set(3) { '8', '4', '7' },
  '1-1' => Set(4) { '6', '8', '3', '2' },
  '1-2' => Set(3) { '3', '1', '6' },
  '2-0' => Set(0) {}
}
The squares hashmap after adding the squares index, squareKey is 
Map(7) {
  '0-0' => Set(5) { '5', '3', '6', '9', '8' },
  '0-1' => Set(4) { '7', '1', '9', '5' },
  '0-2' => Set(1) { '6' },
  '1-0' => Set(3) { '8', '4', '7' },
  '1-1' => Set(4) { '6', '8', '3', '2' },
  '1-2' => Set(3) { '3', '1', '6' },
  '2-0' => Set(1) { '6' }
}
The cols hashmap is 
Map(9) {
  0 => Set(5) { '5', '6', '8', '4', '7' },
  1 => Set(3) { '3', '9', '6' },
  4 => Set(4) { '7', '9', '6', '2' },
  3 => Set(2) { '1', '8' },
  5 => Set(2) { '5', '3' },
  2 => Set(1) { '8' },
  7 => Set(1) { '6' },
  8 => Set(3) { '3', '1', '6' },
  6 => Set(0) {}
}
The cols hashmap after adding column index, c is 
Map(9) {
  0 => Set(5) { '5', '6', '8', '4', '7' },
  1 => Set(3) { '3', '9', '6' },
  4 => Set(4) { '7', '9', '6', '2' },
  3 => Set(2) { '1', '8' },
  5 => Set(2) { '5', '3' },
  2 => Set(1) { '8' },
  7 => Set(1) { '6' },
  8 => Set(3) { '3', '1', '6' },
  6 => Set(1) { '2' }
}
The rows hashmap is 
Map(7) {
  0 => Set(3) { '5', '3', '7' },
  1 => Set(4) { '6', '1', '9', '5' },
  2 => Set(3) { '9', '8', '6' },
  3 => Set(3) { '8', '6', '3' },
  4 => Set(4) { '4', '8', '3', '1' },
  5 => Set(3) { '7', '2', '6' },
  6 => Set(1) { '6' }
}
The rows hashmap after adding row index, r is 
Map(7) {
  0 => Set(3) { '5', '3', '7' },
  1 => Set(4) { '6', '1', '9', '5' },
  2 => Set(3) { '9', '8', '6' },
  3 => Set(3) { '8', '6', '3' },
  4 => Set(4) { '4', '8', '3', '1' },
  5 => Set(3) { '7', '2', '6' },
  6 => Set(2) { '6', '2' }
}
The squares hashmap is 
Map(8) {
  '0-0' => Set(5) { '5', '3', '6', '9', '8' },
  '0-1' => Set(4) { '7', '1', '9', '5' },
  '0-2' => Set(1) { '6' },
  '1-0' => Set(3) { '8', '4', '7' },
  '1-1' => Set(4) { '6', '8', '3', '2' },
  '1-2' => Set(3) { '3', '1', '6' },
  '2-0' => Set(1) { '6' },
  '2-2' => Set(0) {}
}
The squares hashmap after adding the squares index, squareKey is 
Map(8) {
  '0-0' => Set(5) { '5', '3', '6', '9', '8' },
  '0-1' => Set(4) { '7', '1', '9', '5' },
  '0-2' => Set(1) { '6' },
  '1-0' => Set(3) { '8', '4', '7' },
  '1-1' => Set(4) { '6', '8', '3', '2' },
  '1-2' => Set(3) { '3', '1', '6' },
  '2-0' => Set(1) { '6' },
  '2-2' => Set(1) { '2' }
}
The cols hashmap is 
Map(9) {
  0 => Set(5) { '5', '6', '8', '4', '7' },
  1 => Set(3) { '3', '9', '6' },
  4 => Set(4) { '7', '9', '6', '2' },
  3 => Set(2) { '1', '8' },
  5 => Set(2) { '5', '3' },
  2 => Set(1) { '8' },
  7 => Set(1) { '6' },
  8 => Set(3) { '3', '1', '6' },
  6 => Set(1) { '2' }
}
The cols hashmap after adding column index, c is 
Map(9) {
  0 => Set(5) { '5', '6', '8', '4', '7' },
  1 => Set(3) { '3', '9', '6' },
  4 => Set(4) { '7', '9', '6', '2' },
  3 => Set(2) { '1', '8' },
  5 => Set(2) { '5', '3' },
  2 => Set(1) { '8' },
  7 => Set(2) { '6', '8' },
  8 => Set(3) { '3', '1', '6' },
  6 => Set(1) { '2' }
}
The rows hashmap is 
Map(7) {
  0 => Set(3) { '5', '3', '7' },
  1 => Set(4) { '6', '1', '9', '5' },
  2 => Set(3) { '9', '8', '6' },
  3 => Set(3) { '8', '6', '3' },
  4 => Set(4) { '4', '8', '3', '1' },
  5 => Set(3) { '7', '2', '6' },
  6 => Set(2) { '6', '2' }
}
The rows hashmap after adding row index, r is 
Map(7) {
  0 => Set(3) { '5', '3', '7' },
  1 => Set(4) { '6', '1', '9', '5' },
  2 => Set(3) { '9', '8', '6' },
  3 => Set(3) { '8', '6', '3' },
  4 => Set(4) { '4', '8', '3', '1' },
  5 => Set(3) { '7', '2', '6' },
  6 => Set(3) { '6', '2', '8' }
}
The squares hashmap is 
Map(8) {
  '0-0' => Set(5) { '5', '3', '6', '9', '8' },
  '0-1' => Set(4) { '7', '1', '9', '5' },
  '0-2' => Set(1) { '6' },
  '1-0' => Set(3) { '8', '4', '7' },
  '1-1' => Set(4) { '6', '8', '3', '2' },
  '1-2' => Set(3) { '3', '1', '6' },
  '2-0' => Set(1) { '6' },
  '2-2' => Set(1) { '2' }
}
The squares hashmap after adding the squares index, squareKey is 
Map(8) {
  '0-0' => Set(5) { '5', '3', '6', '9', '8' },
  '0-1' => Set(4) { '7', '1', '9', '5' },
  '0-2' => Set(1) { '6' },
  '1-0' => Set(3) { '8', '4', '7' },
  '1-1' => Set(4) { '6', '8', '3', '2' },
  '1-2' => Set(3) { '3', '1', '6' },
  '2-0' => Set(1) { '6' },
  '2-2' => Set(2) { '2', '8' }
}
The cols hashmap is 
Map(9) {
  0 => Set(5) { '5', '6', '8', '4', '7' },
  1 => Set(3) { '3', '9', '6' },
  4 => Set(4) { '7', '9', '6', '2' },
  3 => Set(2) { '1', '8' },
  5 => Set(2) { '5', '3' },
  2 => Set(1) { '8' },
  7 => Set(2) { '6', '8' },
  8 => Set(3) { '3', '1', '6' },
  6 => Set(1) { '2' }
}
The cols hashmap after adding column index, c is 
Map(9) {
  0 => Set(5) { '5', '6', '8', '4', '7' },
  1 => Set(3) { '3', '9', '6' },
  4 => Set(4) { '7', '9', '6', '2' },
  3 => Set(3) { '1', '8', '4' },
  5 => Set(2) { '5', '3' },
  2 => Set(1) { '8' },
  7 => Set(2) { '6', '8' },
  8 => Set(3) { '3', '1', '6' },
  6 => Set(1) { '2' }
}
The rows hashmap is 
Map(8) {
  0 => Set(3) { '5', '3', '7' },
  1 => Set(4) { '6', '1', '9', '5' },
  2 => Set(3) { '9', '8', '6' },
  3 => Set(3) { '8', '6', '3' },
  4 => Set(4) { '4', '8', '3', '1' },
  5 => Set(3) { '7', '2', '6' },
  6 => Set(3) { '6', '2', '8' },
  7 => Set(0) {}
}
The rows hashmap after adding row index, r is 
Map(8) {
  0 => Set(3) { '5', '3', '7' },
  1 => Set(4) { '6', '1', '9', '5' },
  2 => Set(3) { '9', '8', '6' },
  3 => Set(3) { '8', '6', '3' },
  4 => Set(4) { '4', '8', '3', '1' },
  5 => Set(3) { '7', '2', '6' },
  6 => Set(3) { '6', '2', '8' },
  7 => Set(1) { '4' }
}
The squares hashmap is 
Map(9) {
  '0-0' => Set(5) { '5', '3', '6', '9', '8' },
  '0-1' => Set(4) { '7', '1', '9', '5' },
  '0-2' => Set(1) { '6' },
  '1-0' => Set(3) { '8', '4', '7' },
  '1-1' => Set(4) { '6', '8', '3', '2' },
  '1-2' => Set(3) { '3', '1', '6' },
  '2-0' => Set(1) { '6' },
  '2-2' => Set(2) { '2', '8' },
  '2-1' => Set(0) {}
}
The squares hashmap after adding the squares index, squareKey is 
Map(9) {
  '0-0' => Set(5) { '5', '3', '6', '9', '8' },
  '0-1' => Set(4) { '7', '1', '9', '5' },
  '0-2' => Set(1) { '6' },
  '1-0' => Set(3) { '8', '4', '7' },
  '1-1' => Set(4) { '6', '8', '3', '2' },
  '1-2' => Set(3) { '3', '1', '6' },
  '2-0' => Set(1) { '6' },
  '2-2' => Set(2) { '2', '8' },
  '2-1' => Set(1) { '4' }
}
The cols hashmap is 
Map(9) {
  0 => Set(5) { '5', '6', '8', '4', '7' },
  1 => Set(3) { '3', '9', '6' },
  4 => Set(4) { '7', '9', '6', '2' },
  3 => Set(3) { '1', '8', '4' },
  5 => Set(2) { '5', '3' },
  2 => Set(1) { '8' },
  7 => Set(2) { '6', '8' },
  8 => Set(3) { '3', '1', '6' },
  6 => Set(1) { '2' }
}
The cols hashmap after adding column index, c is 
Map(9) {
  0 => Set(5) { '5', '6', '8', '4', '7' },
  1 => Set(3) { '3', '9', '6' },
  4 => Set(5) { '7', '9', '6', '2', '1' },
  3 => Set(3) { '1', '8', '4' },
  5 => Set(2) { '5', '3' },
  2 => Set(1) { '8' },
  7 => Set(2) { '6', '8' },
  8 => Set(3) { '3', '1', '6' },
  6 => Set(1) { '2' }
}
The rows hashmap is 
Map(8) {
  0 => Set(3) { '5', '3', '7' },
  1 => Set(4) { '6', '1', '9', '5' },
  2 => Set(3) { '9', '8', '6' },
  3 => Set(3) { '8', '6', '3' },
  4 => Set(4) { '4', '8', '3', '1' },
  5 => Set(3) { '7', '2', '6' },
  6 => Set(3) { '6', '2', '8' },
  7 => Set(1) { '4' }
}
The rows hashmap after adding row index, r is 
Map(8) {
  0 => Set(3) { '5', '3', '7' },
  1 => Set(4) { '6', '1', '9', '5' },
  2 => Set(3) { '9', '8', '6' },
  3 => Set(3) { '8', '6', '3' },
  4 => Set(4) { '4', '8', '3', '1' },
  5 => Set(3) { '7', '2', '6' },
  6 => Set(3) { '6', '2', '8' },
  7 => Set(2) { '4', '1' }
}
The squares hashmap is 
Map(9) {
  '0-0' => Set(5) { '5', '3', '6', '9', '8' },
  '0-1' => Set(4) { '7', '1', '9', '5' },
  '0-2' => Set(1) { '6' },
  '1-0' => Set(3) { '8', '4', '7' },
  '1-1' => Set(4) { '6', '8', '3', '2' },
  '1-2' => Set(3) { '3', '1', '6' },
  '2-0' => Set(1) { '6' },
  '2-2' => Set(2) { '2', '8' },
  '2-1' => Set(1) { '4' }
}
The squares hashmap after adding the squares index, squareKey is 
Map(9) {
  '0-0' => Set(5) { '5', '3', '6', '9', '8' },
  '0-1' => Set(4) { '7', '1', '9', '5' },
  '0-2' => Set(1) { '6' },
  '1-0' => Set(3) { '8', '4', '7' },
  '1-1' => Set(4) { '6', '8', '3', '2' },
  '1-2' => Set(3) { '3', '1', '6' },
  '2-0' => Set(1) { '6' },
  '2-2' => Set(2) { '2', '8' },
  '2-1' => Set(2) { '4', '1' }
}
The cols hashmap is 
Map(9) {
  0 => Set(5) { '5', '6', '8', '4', '7' },
  1 => Set(3) { '3', '9', '6' },
  4 => Set(5) { '7', '9', '6', '2', '1' },
  3 => Set(3) { '1', '8', '4' },
  5 => Set(2) { '5', '3' },
  2 => Set(1) { '8' },
  7 => Set(2) { '6', '8' },
  8 => Set(3) { '3', '1', '6' },
  6 => Set(1) { '2' }
}
The cols hashmap after adding column index, c is 
Map(9) {
  0 => Set(5) { '5', '6', '8', '4', '7' },
  1 => Set(3) { '3', '9', '6' },
  4 => Set(5) { '7', '9', '6', '2', '1' },
  3 => Set(3) { '1', '8', '4' },
  5 => Set(3) { '5', '3', '9' },
  2 => Set(1) { '8' },
  7 => Set(2) { '6', '8' },
  8 => Set(3) { '3', '1', '6' },
  6 => Set(1) { '2' }
}
The rows hashmap is 
Map(8) {
  0 => Set(3) { '5', '3', '7' },
  1 => Set(4) { '6', '1', '9', '5' },
  2 => Set(3) { '9', '8', '6' },
  3 => Set(3) { '8', '6', '3' },
  4 => Set(4) { '4', '8', '3', '1' },
  5 => Set(3) { '7', '2', '6' },
  6 => Set(3) { '6', '2', '8' },
  7 => Set(2) { '4', '1' }
}
The rows hashmap after adding row index, r is 
Map(8) {
  0 => Set(3) { '5', '3', '7' },
  1 => Set(4) { '6', '1', '9', '5' },
  2 => Set(3) { '9', '8', '6' },
  3 => Set(3) { '8', '6', '3' },
  4 => Set(4) { '4', '8', '3', '1' },
  5 => Set(3) { '7', '2', '6' },
  6 => Set(3) { '6', '2', '8' },
  7 => Set(3) { '4', '1', '9' }
}
The squares hashmap is 
Map(9) {
  '0-0' => Set(5) { '5', '3', '6', '9', '8' },
  '0-1' => Set(4) { '7', '1', '9', '5' },
  '0-2' => Set(1) { '6' },
  '1-0' => Set(3) { '8', '4', '7' },
  '1-1' => Set(4) { '6', '8', '3', '2' },
  '1-2' => Set(3) { '3', '1', '6' },
  '2-0' => Set(1) { '6' },
  '2-2' => Set(2) { '2', '8' },
  '2-1' => Set(2) { '4', '1' }
}
The squares hashmap after adding the squares index, squareKey is 
Map(9) {
  '0-0' => Set(5) { '5', '3', '6', '9', '8' },
  '0-1' => Set(4) { '7', '1', '9', '5' },
  '0-2' => Set(1) { '6' },
  '1-0' => Set(3) { '8', '4', '7' },
  '1-1' => Set(4) { '6', '8', '3', '2' },
  '1-2' => Set(3) { '3', '1', '6' },
  '2-0' => Set(1) { '6' },
  '2-2' => Set(2) { '2', '8' },
  '2-1' => Set(3) { '4', '1', '9' }
}
The cols hashmap is 
Map(9) {
  0 => Set(5) { '5', '6', '8', '4', '7' },
  1 => Set(3) { '3', '9', '6' },
  4 => Set(5) { '7', '9', '6', '2', '1' },
  3 => Set(3) { '1', '8', '4' },
  5 => Set(3) { '5', '3', '9' },
  2 => Set(1) { '8' },
  7 => Set(2) { '6', '8' },
  8 => Set(3) { '3', '1', '6' },
  6 => Set(1) { '2' }
}
The cols hashmap after adding column index, c is 
Map(9) {
  0 => Set(5) { '5', '6', '8', '4', '7' },
  1 => Set(3) { '3', '9', '6' },
  4 => Set(5) { '7', '9', '6', '2', '1' },
  3 => Set(3) { '1', '8', '4' },
  5 => Set(3) { '5', '3', '9' },
  2 => Set(1) { '8' },
  7 => Set(2) { '6', '8' },
  8 => Set(4) { '3', '1', '6', '5' },
  6 => Set(1) { '2' }
}
The rows hashmap is 
Map(8) {
  0 => Set(3) { '5', '3', '7' },
  1 => Set(4) { '6', '1', '9', '5' },
  2 => Set(3) { '9', '8', '6' },
  3 => Set(3) { '8', '6', '3' },
  4 => Set(4) { '4', '8', '3', '1' },
  5 => Set(3) { '7', '2', '6' },
  6 => Set(3) { '6', '2', '8' },
  7 => Set(3) { '4', '1', '9' }
}
The rows hashmap after adding row index, r is 
Map(8) {
  0 => Set(3) { '5', '3', '7' },
  1 => Set(4) { '6', '1', '9', '5' },
  2 => Set(3) { '9', '8', '6' },
  3 => Set(3) { '8', '6', '3' },
  4 => Set(4) { '4', '8', '3', '1' },
  5 => Set(3) { '7', '2', '6' },
  6 => Set(3) { '6', '2', '8' },
  7 => Set(4) { '4', '1', '9', '5' }
}
The squares hashmap is 
Map(9) {
  '0-0' => Set(5) { '5', '3', '6', '9', '8' },
  '0-1' => Set(4) { '7', '1', '9', '5' },
  '0-2' => Set(1) { '6' },
  '1-0' => Set(3) { '8', '4', '7' },
  '1-1' => Set(4) { '6', '8', '3', '2' },
  '1-2' => Set(3) { '3', '1', '6' },
  '2-0' => Set(1) { '6' },
  '2-2' => Set(2) { '2', '8' },
  '2-1' => Set(3) { '4', '1', '9' }
}
The squares hashmap after adding the squares index, squareKey is 
Map(9) {
  '0-0' => Set(5) { '5', '3', '6', '9', '8' },
  '0-1' => Set(4) { '7', '1', '9', '5' },
  '0-2' => Set(1) { '6' },
  '1-0' => Set(3) { '8', '4', '7' },
  '1-1' => Set(4) { '6', '8', '3', '2' },
  '1-2' => Set(3) { '3', '1', '6' },
  '2-0' => Set(1) { '6' },
  '2-2' => Set(3) { '2', '8', '5' },
  '2-1' => Set(3) { '4', '1', '9' }
}
The cols hashmap is 
Map(9) {
  0 => Set(5) { '5', '6', '8', '4', '7' },
  1 => Set(3) { '3', '9', '6' },
  4 => Set(5) { '7', '9', '6', '2', '1' },
  3 => Set(3) { '1', '8', '4' },
  5 => Set(3) { '5', '3', '9' },
  2 => Set(1) { '8' },
  7 => Set(2) { '6', '8' },
  8 => Set(4) { '3', '1', '6', '5' },
  6 => Set(1) { '2' }
}
The cols hashmap after adding column index, c is 
Map(9) {
  0 => Set(5) { '5', '6', '8', '4', '7' },
  1 => Set(3) { '3', '9', '6' },
  4 => Set(6) { '7', '9', '6', '2', '1', '8' },
  3 => Set(3) { '1', '8', '4' },
  5 => Set(3) { '5', '3', '9' },
  2 => Set(1) { '8' },
  7 => Set(2) { '6', '8' },
  8 => Set(4) { '3', '1', '6', '5' },
  6 => Set(1) { '2' }
}
The rows hashmap is 
Map(9) {
  0 => Set(3) { '5', '3', '7' },
  1 => Set(4) { '6', '1', '9', '5' },
  2 => Set(3) { '9', '8', '6' },
  3 => Set(3) { '8', '6', '3' },
  4 => Set(4) { '4', '8', '3', '1' },
  5 => Set(3) { '7', '2', '6' },
  6 => Set(3) { '6', '2', '8' },
  7 => Set(4) { '4', '1', '9', '5' },
  8 => Set(0) {}
}
The rows hashmap after adding row index, r is 
Map(9) {
  0 => Set(3) { '5', '3', '7' },
  1 => Set(4) { '6', '1', '9', '5' },
  2 => Set(3) { '9', '8', '6' },
  3 => Set(3) { '8', '6', '3' },
  4 => Set(4) { '4', '8', '3', '1' },
  5 => Set(3) { '7', '2', '6' },
  6 => Set(3) { '6', '2', '8' },
  7 => Set(4) { '4', '1', '9', '5' },
  8 => Set(1) { '8' }
}
The squares hashmap is 
Map(9) {
  '0-0' => Set(5) { '5', '3', '6', '9', '8' },
  '0-1' => Set(4) { '7', '1', '9', '5' },
  '0-2' => Set(1) { '6' },
  '1-0' => Set(3) { '8', '4', '7' },
  '1-1' => Set(4) { '6', '8', '3', '2' },
  '1-2' => Set(3) { '3', '1', '6' },
  '2-0' => Set(1) { '6' },
  '2-2' => Set(3) { '2', '8', '5' },
  '2-1' => Set(3) { '4', '1', '9' }
}
The squares hashmap after adding the squares index, squareKey is 
Map(9) {
  '0-0' => Set(5) { '5', '3', '6', '9', '8' },
  '0-1' => Set(4) { '7', '1', '9', '5' },
  '0-2' => Set(1) { '6' },
  '1-0' => Set(3) { '8', '4', '7' },
  '1-1' => Set(4) { '6', '8', '3', '2' },
  '1-2' => Set(3) { '3', '1', '6' },
  '2-0' => Set(1) { '6' },
  '2-2' => Set(3) { '2', '8', '5' },
  '2-1' => Set(4) { '4', '1', '9', '8' }
}
The cols hashmap is 
Map(9) {
  0 => Set(5) { '5', '6', '8', '4', '7' },
  1 => Set(3) { '3', '9', '6' },
  4 => Set(6) { '7', '9', '6', '2', '1', '8' },
  3 => Set(3) { '1', '8', '4' },
  5 => Set(3) { '5', '3', '9' },
  2 => Set(1) { '8' },
  7 => Set(2) { '6', '8' },
  8 => Set(4) { '3', '1', '6', '5' },
  6 => Set(1) { '2' }
}
The cols hashmap after adding column index, c is 
Map(9) {
  0 => Set(5) { '5', '6', '8', '4', '7' },
  1 => Set(3) { '3', '9', '6' },
  4 => Set(6) { '7', '9', '6', '2', '1', '8' },
  3 => Set(3) { '1', '8', '4' },
  5 => Set(3) { '5', '3', '9' },
  2 => Set(1) { '8' },
  7 => Set(3) { '6', '8', '7' },
  8 => Set(4) { '3', '1', '6', '5' },
  6 => Set(1) { '2' }
}
The rows hashmap is 
Map(9) {
  0 => Set(3) { '5', '3', '7' },
  1 => Set(4) { '6', '1', '9', '5' },
  2 => Set(3) { '9', '8', '6' },
  3 => Set(3) { '8', '6', '3' },
  4 => Set(4) { '4', '8', '3', '1' },
  5 => Set(3) { '7', '2', '6' },
  6 => Set(3) { '6', '2', '8' },
  7 => Set(4) { '4', '1', '9', '5' },
  8 => Set(1) { '8' }
}
The rows hashmap after adding row index, r is 
Map(9) {
  0 => Set(3) { '5', '3', '7' },
  1 => Set(4) { '6', '1', '9', '5' },
  2 => Set(3) { '9', '8', '6' },
  3 => Set(3) { '8', '6', '3' },
  4 => Set(4) { '4', '8', '3', '1' },
  5 => Set(3) { '7', '2', '6' },
  6 => Set(3) { '6', '2', '8' },
  7 => Set(4) { '4', '1', '9', '5' },
  8 => Set(2) { '8', '7' }
}
The squares hashmap is 
Map(9) {
  '0-0' => Set(5) { '5', '3', '6', '9', '8' },
  '0-1' => Set(4) { '7', '1', '9', '5' },
  '0-2' => Set(1) { '6' },
  '1-0' => Set(3) { '8', '4', '7' },
  '1-1' => Set(4) { '6', '8', '3', '2' },
  '1-2' => Set(3) { '3', '1', '6' },
  '2-0' => Set(1) { '6' },
  '2-2' => Set(3) { '2', '8', '5' },
  '2-1' => Set(4) { '4', '1', '9', '8' }
}
The squares hashmap after adding the squares index, squareKey is 
Map(9) {
  '0-0' => Set(5) { '5', '3', '6', '9', '8' },
  '0-1' => Set(4) { '7', '1', '9', '5' },
  '0-2' => Set(1) { '6' },
  '1-0' => Set(3) { '8', '4', '7' },
  '1-1' => Set(4) { '6', '8', '3', '2' },
  '1-2' => Set(3) { '3', '1', '6' },
  '2-0' => Set(1) { '6' },
  '2-2' => Set(4) { '2', '8', '5', '7' },
  '2-1' => Set(4) { '4', '1', '9', '8' }
}
The cols hashmap is 
Map(9) {
  0 => Set(5) { '5', '6', '8', '4', '7' },
  1 => Set(3) { '3', '9', '6' },
  4 => Set(6) { '7', '9', '6', '2', '1', '8' },
  3 => Set(3) { '1', '8', '4' },
  5 => Set(3) { '5', '3', '9' },
  2 => Set(1) { '8' },
  7 => Set(3) { '6', '8', '7' },
  8 => Set(4) { '3', '1', '6', '5' },
  6 => Set(1) { '2' }
}
The cols hashmap after adding column index, c is 
Map(9) {
  0 => Set(5) { '5', '6', '8', '4', '7' },
  1 => Set(3) { '3', '9', '6' },
  4 => Set(6) { '7', '9', '6', '2', '1', '8' },
  3 => Set(3) { '1', '8', '4' },
  5 => Set(3) { '5', '3', '9' },
  2 => Set(1) { '8' },
  7 => Set(3) { '6', '8', '7' },
  8 => Set(5) { '3', '1', '6', '5', '9' },
  6 => Set(1) { '2' }
}
The rows hashmap is 
Map(9) {
  0 => Set(3) { '5', '3', '7' },
  1 => Set(4) { '6', '1', '9', '5' },
  2 => Set(3) { '9', '8', '6' },
  3 => Set(3) { '8', '6', '3' },
  4 => Set(4) { '4', '8', '3', '1' },
  5 => Set(3) { '7', '2', '6' },
  6 => Set(3) { '6', '2', '8' },
  7 => Set(4) { '4', '1', '9', '5' },
  8 => Set(2) { '8', '7' }
}
The rows hashmap after adding row index, r is 
Map(9) {
  0 => Set(3) { '5', '3', '7' },
  1 => Set(4) { '6', '1', '9', '5' },
  2 => Set(3) { '9', '8', '6' },
  3 => Set(3) { '8', '6', '3' },
  4 => Set(4) { '4', '8', '3', '1' },
  5 => Set(3) { '7', '2', '6' },
  6 => Set(3) { '6', '2', '8' },
  7 => Set(4) { '4', '1', '9', '5' },
  8 => Set(3) { '8', '7', '9' }
}
The squares hashmap is 
Map(9) {
  '0-0' => Set(5) { '5', '3', '6', '9', '8' },
  '0-1' => Set(4) { '7', '1', '9', '5' },
  '0-2' => Set(1) { '6' },
  '1-0' => Set(3) { '8', '4', '7' },
  '1-1' => Set(4) { '6', '8', '3', '2' },
  '1-2' => Set(3) { '3', '1', '6' },
  '2-0' => Set(1) { '6' },
  '2-2' => Set(4) { '2', '8', '5', '7' },
  '2-1' => Set(4) { '4', '1', '9', '8' }
}
The squares hashmap after adding the squares index, squareKey is 
Map(9) {
  '0-0' => Set(5) { '5', '3', '6', '9', '8' },
  '0-1' => Set(4) { '7', '1', '9', '5' },
  '0-2' => Set(1) { '6' },
  '1-0' => Set(3) { '8', '4', '7' },
  '1-1' => Set(4) { '6', '8', '3', '2' },
  '1-2' => Set(3) { '3', '1', '6' },
  '2-0' => Set(1) { '6' },
  '2-2' => Set(5) { '2', '8', '5', '7', '9' },
  '2-1' => Set(4) { '4', '1', '9', '8' }
}






*/